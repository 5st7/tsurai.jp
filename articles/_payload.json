[{"data":1,"prerenderedAt":763},["Reactive",2],{"articles":3},[4,91,205,408,532,654,746],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"author":11,"date":15,"layout":16,"body":17,"_type":86,"_id":87,"_source":88,"_file":89,"_extension":90},"/articles/create-digital","articles",false,"","DigitalOceanでk8sを立てた","GKEのプリエンティブインスタンス並に安いと聞いたので、DigitalOceanでk8sを立てて遊び場を作ってみる",{"name":12,"avatarUrl":13,"link":14},"5st7","https://pbs.twimg.com/profile_images/1042510623962275840/1Iw_Mvud_400x400.jpg","https://twitter.com/5st7","2024-2-5","article",{"type":18,"children":19,"toc":83},"root",[20,27],{"type":21,"tag":22,"props":23,"children":24},"element","p",{},[25],{"type":26,"value":10},"text",{"type":21,"tag":28,"props":29,"children":30},"ul",{},[31,43,71],{"type":21,"tag":32,"props":33,"children":34},"li",{},[35,37],{"type":26,"value":36},"Projectを作成する\n",{"type":21,"tag":38,"props":39,"children":42},"img",{"alt":40,"src":41},"dc-create-project.png","/dc-create-project.png",[],{"type":21,"tag":32,"props":44,"children":45},{},[46,48],{"type":26,"value":47},"プロジェクトを作ったらサイドバーからKubernetesを選んでクラスタを作っていく",{"type":21,"tag":28,"props":49,"children":50},{},[51,56],{"type":21,"tag":32,"props":52,"children":53},{},[54],{"type":26,"value":55},"tokyoリージョンとかはなさそうなのでシンガポールを選んだ",{"type":21,"tag":32,"props":57,"children":58},{},[59,61,66],{"type":26,"value":60},"2024年2月5日だとv1.29がrecommendedになってた\n",{"type":21,"tag":38,"props":62,"children":65},{"alt":63,"src":64},"select-region.png","/select-region.png",[],{"type":21,"tag":38,"props":67,"children":70},{"alt":68,"src":69},"select-version.png","/select-version.png",[],{"type":21,"tag":32,"props":72,"children":73},{},[74,76,81],{"type":26,"value":75},"最後にポチポチノードプールを設定して終わり\n",{"type":21,"tag":38,"props":77,"children":80},{"alt":78,"src":79},"node-pool.png","/node-pool.png",[],{"type":26,"value":82},"\n2 vCPU/4GB RAMで 24ドル/月...\nGKEでn2-standard-2をSpotで借りる方が安い・・・？",{"title":8,"searchDepth":84,"depth":84,"links":85},2,[],"markdown","content:articles:create-digital.md","content","articles/create-digital.md","md",{"_path":92,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":93,"description":94,"author":95,"date":96,"layout":16,"body":97,"_type":86,"_id":203,"_source":88,"_file":204,"_extension":90},"/articles/java-performance-on-kubernetes","Java Performance on kubernetesの要約","Kubernetes上でのJavaアプリケーションの実行に関するリソース制限（CPUとメモリ）がアプリケーションのパフォーマンスに与える影響について解説している動画 を見たので要約",{"name":12,"avatarUrl":13,"link":14},"2024-2-15",{"type":18,"children":98,"toc":201},[99,115],{"type":21,"tag":22,"props":100,"children":101},{},[102,104,113],{"type":26,"value":103},"Kubernetes上でのJavaアプリケーションの実行に関するリソース制限（CPUとメモリ）がアプリケーションのパフォーマンスに与える影響について解説している",{"type":21,"tag":105,"props":106,"children":110},"a",{"href":107,"rel":108},"https://www.youtube.com/watch?v=HTtdoRc0BQI",[109],"nofollow",[111],{"type":26,"value":112},"動画",{"type":26,"value":114}," を見たので要約",{"type":21,"tag":28,"props":116,"children":117},{},[118,136,154,172,188],{"type":21,"tag":32,"props":119,"children":120},{},[121,123],{"type":26,"value":122},"リソース制限の影響\n",{"type":21,"tag":28,"props":124,"children":125},{},[126,131],{"type":21,"tag":32,"props":127,"children":128},{},[129],{"type":26,"value":130},"NewRelicの調査によると多くのJavaアプリケーションが1つまたは2つのCPUコアと512MB以下のメモリ制限で実行されているらしい",{"type":21,"tag":32,"props":132,"children":133},{},[134],{"type":26,"value":135},"2つのCPU、1GBの割り当てでもGCのアルゴリズムはSerial GCになる",{"type":21,"tag":32,"props":137,"children":138},{},[139,141],{"type":26,"value":140},"ガベージコレクタの選択と設定\n",{"type":21,"tag":28,"props":142,"children":143},{},[144,149],{"type":21,"tag":32,"props":145,"children":146},{},[147],{"type":26,"value":148},"Serial GCだとG1よりStop The Worldが長い",{"type":21,"tag":32,"props":150,"children":151},{},[152],{"type":26,"value":153},"一般的にG1より効率が悪い",{"type":21,"tag":32,"props":155,"children":156},{},[157,159],{"type":26,"value":158},"JVMの設定\n",{"type":21,"tag":28,"props":160,"children":161},{},[162,167],{"type":21,"tag":32,"props":163,"children":164},{},[165],{"type":26,"value":166},"ヒープサイズに関しては自分で設定したほうがいい",{"type":21,"tag":32,"props":168,"children":169},{},[170],{"type":26,"value":171},"1GB割り当てた時に256MBしか割り当てられなかったりするため",{"type":21,"tag":32,"props":173,"children":174},{},[175,177],{"type":26,"value":176},"スタートアップ時間の最適化\n",{"type":21,"tag":28,"props":178,"children":179},{},[180,185],{"type":21,"tag":32,"props":181,"children":182},{},[183],{"type":26,"value":184},"多くのフレームワークがCPUの数でスレッドプールの数を設定してる",{"type":21,"tag":32,"props":186,"children":187},{},[],{"type":21,"tag":32,"props":189,"children":190},{},[191,193],{"type":26,"value":192},"クラスタとアプリケーションのスケーリング戦略\n",{"type":21,"tag":28,"props":194,"children":195},{},[196],{"type":21,"tag":32,"props":197,"children":198},{},[199],{"type":26,"value":200},"Javaアプリケーションがスケールアップ（リソースを増やす）方がスケールアウト（インスタンス数を増やす）よりも効率的である場合が多いこと, そして適切なクラスタサイズとアプリケーションの設定が重要であるらしい",{"title":8,"searchDepth":84,"depth":84,"links":202},[],"content:articles:java-performance-on-kubernetes.md","articles/java-performance-on-kubernetes.md",{"_path":206,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":207,"description":208,"author":209,"date":210,"layout":16,"body":211,"_type":86,"_id":406,"_source":88,"_file":407,"_extension":90},"/articles/how-adobe-is-optimizing-resource-usage-in-kubernetes","How Adobe is Optimizing Resource Usage in Kubernetesを見たので要約","今更だけど、KubeCon + CloudNativeCon North America 2022で発表されたHow Adobe is Optimizing Resource Usage in Kubernetesを見てコスト最適化頑張りたいとなったので要約しておく\n動画は以下",{"name":12,"avatarUrl":13,"link":14},"2024-1-20",{"type":18,"children":212,"toc":404},[213,217],{"type":21,"tag":22,"props":214,"children":215},{},[216],{"type":26,"value":208},{"type":21,"tag":28,"props":218,"children":219},{},[220,229,247,252,270,293,311,329,368,386],{"type":21,"tag":32,"props":221,"children":222},{},[223],{"type":21,"tag":105,"props":224,"children":227},{"href":225,"rel":226},"https://www.youtube.com/watch?v=iVD5YI1-U_M",[109],[228],{"type":26,"value":225},{"type":21,"tag":32,"props":230,"children":231},{},[232,234],{"type":26,"value":233},"AdobeではAdobe Experience Manager(AEM)をk8sの上で運用している",{"type":21,"tag":28,"props":235,"children":236},{},[237,242],{"type":21,"tag":32,"props":238,"children":239},{},[240],{"type":26,"value":241},"Java",{"type":21,"tag":32,"props":243,"children":244},{},[245],{"type":26,"value":246},"Apache Software FoundationのOSSを使ってる",{"type":21,"tag":32,"props":248,"children":249},{},[250],{"type":26,"value":251},"Azure上で運用されていて25以上のクラスタで動いている",{"type":21,"tag":32,"props":253,"children":254},{},[255,257],{"type":26,"value":256},"k8sのワークロードにはRequestとlimitをつける必要がある",{"type":21,"tag":28,"props":258,"children":259},{},[260,265],{"type":21,"tag":32,"props":261,"children":262},{},[263],{"type":26,"value":264},"Request:どれだけのリソースが保証されているか",{"type":21,"tag":32,"props":266,"children":267},{},[268],{"type":26,"value":269},"limit:どれだけのリソースが消費されているか",{"type":21,"tag":32,"props":271,"children":272},{},[273,275],{"type":26,"value":274},"制限をかけると以下のことが起こりうる",{"type":21,"tag":28,"props":276,"children":277},{},[278,283,288],{"type":21,"tag":32,"props":279,"children":280},{},[281],{"type":26,"value":282},"CPU: CPUスロットリング",{"type":21,"tag":32,"props":284,"children":285},{},[286],{"type":26,"value":287},"Memory: OOM",{"type":21,"tag":32,"props":289,"children":290},{},[291],{"type":26,"value":292},"ephemeral storage: Podのeviction",{"type":21,"tag":32,"props":294,"children":295},{},[296,298],{"type":26,"value":297},"AEMはJavaのアプリケーション",{"type":21,"tag":28,"props":299,"children":300},{},[301,306],{"type":21,"tag":32,"props":302,"children":303},{},[304],{"type":26,"value":305},"JVMは起動時に全てのメモリを確保し、メモリの使用率はk8sからは隠されています",{"type":21,"tag":32,"props":307,"children":308},{},[309],{"type":26,"value":310},"JDK 17以上ではホストではなくコンテナの利用可能なメモリを検出する",{"type":21,"tag":32,"props":312,"children":313},{},[314,316],{"type":26,"value":315},"Kubernetes Cluster AutoScaler",{"type":21,"tag":28,"props":317,"children":318},{},[319,324],{"type":21,"tag":32,"props":320,"children":321},{},[322],{"type":26,"value":323},"CPU/メモリリクエストに基づいてノードの数を増減させる",{"type":21,"tag":32,"props":325,"children":326},{},[327],{"type":26,"value":328},"これでコストを30 - 50 %抑えた",{"type":21,"tag":32,"props":330,"children":331},{},[332,334],{"type":26,"value":333},"Horizontal Pod Autoscaler",{"type":21,"tag":28,"props":335,"children":336},{},[337,342,363],{"type":21,"tag":32,"props":338,"children":339},{},[340],{"type":26,"value":341},"必要に応じてPodの数を増減させる",{"type":21,"tag":32,"props":343,"children":344},{},[345,347],{"type":26,"value":346},"AEMだとCPUの使用率かHTTPの分単位のリクエスト数(rps)がいいのかが考えられる\n",{"type":21,"tag":28,"props":348,"children":349},{},[350],{"type":21,"tag":32,"props":351,"children":352},{},[353,355],{"type":26,"value":354},"CPUの使用率は不適切だった\n",{"type":21,"tag":28,"props":356,"children":357},{},[358],{"type":21,"tag":32,"props":359,"children":360},{},[361],{"type":26,"value":362},"コンテナ起動時のスパイクがカスケード効果を引き起こす可能性があった",{"type":21,"tag":32,"props":364,"children":365},{},[366],{"type":26,"value":367},"HPAを有効にして50 - 70%コストを抑えられた",{"type":21,"tag":32,"props":369,"children":370},{},[371,373],{"type":26,"value":372},"Vertical Pod Autoscaler",{"type":21,"tag":28,"props":374,"children":375},{},[376,381],{"type":21,"tag":32,"props":377,"children":378},{},[379],{"type":26,"value":380},"開発環境などにおいて使っていないときはスケールダウンする",{"type":21,"tag":32,"props":382,"children":383},{},[384],{"type":26,"value":385},"5 - 15 %コストダウン",{"type":21,"tag":32,"props":387,"children":388},{},[389,391],{"type":26,"value":390},"以下の2つはAdobe内部の話なので割愛",{"type":21,"tag":28,"props":392,"children":393},{},[394,399],{"type":21,"tag":32,"props":395,"children":396},{},[397],{"type":26,"value":398},"Hibernation",{"type":21,"tag":32,"props":400,"children":401},{},[402],{"type":26,"value":403},"ARC",{"title":8,"searchDepth":84,"depth":84,"links":405},[],"content:articles:How-Adobe-is-Optimizing-Resource-Usage-in-Kubernetes.md","articles/How-Adobe-is-Optimizing-Resource-Usage-in-Kubernetes.md",{"_path":409,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":410,"description":411,"author":412,"date":413,"layout":16,"body":414,"_type":86,"_id":530,"_source":88,"_file":531,"_extension":90},"/articles/efficient-mysql-performance-2","Efficient MySQL Performance 読書メモ ~その2~","メモ１からの続き",{"name":12,"avatarUrl":13,"link":14},"2024-03-1",{"type":18,"children":415,"toc":528},[416,420,427],{"type":21,"tag":22,"props":417,"children":418},{},[419],{"type":26,"value":411},{"type":21,"tag":421,"props":422,"children":424},"h1",{"id":423},"indexes-and-indexing",[425],{"type":26,"value":426},"Indexes and Indexing",{"type":21,"tag":28,"props":428,"children":429},{},[430,435,474],{"type":21,"tag":32,"props":431,"children":432},{},[433],{"type":26,"value":434},"Indexを有効に使うことでMySQLのパフォーマンスを最も発揮することができる",{"type":21,"tag":32,"props":436,"children":437},{},[438,440],{"type":26,"value":439},"InnoDbは主キーで整理されたB-Treeインデックス\n",{"type":21,"tag":28,"props":441,"children":442},{},[443,456],{"type":21,"tag":32,"props":444,"children":445},{},[446,448],{"type":26,"value":447},"Clustered Index\n",{"type":21,"tag":28,"props":449,"children":450},{},[451],{"type":21,"tag":32,"props":452,"children":453},{},[454],{"type":26,"value":455},"PK をキーにした B-tree インデックスとして保存されている",{"type":21,"tag":32,"props":457,"children":458},{},[459,461],{"type":26,"value":460},"Secondary Index\n",{"type":21,"tag":28,"props":462,"children":463},{},[464,469],{"type":21,"tag":32,"props":465,"children":466},{},[467],{"type":26,"value":468},"PK 以外のキーを使ったすべてのインデックス",{"type":21,"tag":32,"props":470,"children":471},{},[472],{"type":26,"value":473},"Leaf に PK を保持している。つまり Secondary Index を使った検索はまず Secondary Index を走査し取得した PK の値で Clustered Index を走査する",{"type":21,"tag":32,"props":475,"children":476},{},[477,479],{"type":26,"value":478},"ある時点では最適なインデックスも、時間経過でそうではなくなることがある\n",{"type":21,"tag":28,"props":480,"children":481},{},[482,487,505,510],{"type":21,"tag":32,"props":483,"children":484},{},[485],{"type":26,"value":486},"クエリが変わる",{"type":21,"tag":32,"props":488,"children":489},{},[490,492],{"type":26,"value":491},"キーが過剰、重複、未使用\n",{"type":21,"tag":28,"props":493,"children":494},{},[495],{"type":21,"tag":32,"props":496,"children":497},{},[498],{"type":21,"tag":105,"props":499,"children":502},{"href":500,"rel":501},"https://docs.percona.com/percona-toolkit/pt-duplicate-key-checker.html",[109],[503],{"type":26,"value":504},"pt-duplicate-key-checker",{"type":21,"tag":32,"props":506,"children":507},{},[508],{"type":26,"value":509},"インデックスを Drop する時、8.0 以降は Invisible Indexes で実際に削除せずに検証できる",{"type":21,"tag":32,"props":511,"children":512},{},[513,515],{"type":26,"value":514},"Selectivity が極端\n",{"type":21,"tag":28,"props":516,"children":517},{},[518,523],{"type":21,"tag":32,"props":519,"children":520},{},[521],{"type":26,"value":522},"小さい場合: より適切なキーがある",{"type":21,"tag":32,"props":524,"children":525},{},[526],{"type":26,"value":527},"大きい場合: 本来ユニークインデックスであるべきかも",{"title":8,"searchDepth":84,"depth":84,"links":529},[],"content:articles:Efficient-MySQL-Performance-2.md","articles/Efficient-MySQL-Performance-2.md",{"_path":533,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":534,"description":535,"author":536,"date":537,"layout":16,"body":538,"_type":86,"_id":652,"_source":88,"_file":653,"_extension":90},"/articles/efficient-mysql-performance-1","Efficient MySQL Performance 読書メモ ~その1~","最近Efficient MySQL Performanceを読んでいる",{"name":12,"avatarUrl":13,"link":14},"2023-12-8",{"type":18,"children":539,"toc":649},[540,554,559,566],{"type":21,"tag":22,"props":541,"children":542},{},[543,545,552],{"type":26,"value":544},"最近",{"type":21,"tag":105,"props":546,"children":549},{"href":547,"rel":548},"https://www.amazon.co.jp/Efficient-Mysql-Performance-Practices-Techniques/dp/1098105095",[109],[550],{"type":26,"value":551},"Efficient MySQL Performance",{"type":26,"value":553},"を読んでいる",{"type":21,"tag":22,"props":555,"children":556},{},[557],{"type":26,"value":558},"洋書なので読むのが大変だけど結構面白い\nひとまず第一章のQuery Response Timeの章まで読んだのでそこまで読書メモ",{"type":21,"tag":560,"props":561,"children":563},"h2",{"id":562},"_1-query-response-time",[564],{"type":26,"value":565},"1. Query Response Time",{"type":21,"tag":28,"props":567,"children":568},{},[569,582,595,608,613,631],{"type":21,"tag":32,"props":570,"children":571},{},[572,574],{"type":26,"value":573},"クエリ応答時間がMySQLのパフォーマンスを測る上での北極星になる\n",{"type":21,"tag":28,"props":575,"children":576},{},[577],{"type":21,"tag":32,"props":578,"children":579},{},[580],{"type":26,"value":581},"クエリ応答時間はクエリ実行中のステップやロック待ちなどから構成され、複雑さの範囲を絞り本質的なものに焦点を当てることができる",{"type":21,"tag":32,"props":583,"children":584},{},[585,587],{"type":26,"value":586},"クエリのメトリクスはSlow Query log, Perfomance Schemaから確認する\n",{"type":21,"tag":28,"props":588,"children":589},{},[590],{"type":21,"tag":32,"props":591,"children":592},{},[593],{"type":26,"value":594},"MySQL 8.0より前のバージョンだとSlowQueryLogが提供するメトリクスはQueryTime,lock_time,Rows_sent,Rows_examinedしか提供せず、分析が難しいのでPerfomanceSchemaを元に分析をするといい",{"type":21,"tag":32,"props":596,"children":597},{},[598,600],{"type":26,"value":599},"クエリ解析の目的は、遅い実行時間を解くのではなく、クエリの実行を理解することである\n",{"type":21,"tag":28,"props":601,"children":602},{},[603],{"type":21,"tag":32,"props":604,"children":605},{},[606],{"type":26,"value":607},"クエリ解析には、報告されているクエリメトリクス、メタデータ（Explain, テーブル構造）やアプリケーションの知識を使って解析をする",{"type":21,"tag":32,"props":609,"children":610},{},[611],{"type":26,"value":612},"クエリの解析には、クエリ応答じかn、ロック時間、走査した行、送信した行、影響を受けた行、スキャンの種類、フルジョインの選択、作成したtmpテーブル、クエリカウントの9つのクエリメトリクスが必須となる",{"type":21,"tag":32,"props":614,"children":615},{},[616,618],{"type":26,"value":617},"クエリ応答時間お改善は、直接クエリ最適化と間接クエリ最適化に分けられる\n",{"type":21,"tag":28,"props":619,"children":620},{},[621,626],{"type":21,"tag":32,"props":622,"children":623},{},[624],{"type":26,"value":625},"直接クエリ最適化とは、クエリやインデックスを変更すること",{"type":21,"tag":32,"props":627,"children":628},{},[629],{"type":26,"value":630},"間接クエリ最適化とは、データやアクセスパターンの変更",{"type":21,"tag":32,"props":632,"children":633},{},[634,636],{"type":26,"value":635},"少なくともパフォーマンスが顧客に影響する時、コードを変更する前と後に月に1度クエリプロファイルを確認し、遅いクエリを最適化する\n",{"type":21,"tag":28,"props":637,"children":638},{},[639,644],{"type":21,"tag":32,"props":640,"children":641},{},[642],{"type":26,"value":643},"コード変更の前後でクエリ最適化を優先するエンジニアが多いが、著者の経験ではどちらもしなく、ステージング環境、本番環境で最適化し続けていく",{"type":21,"tag":32,"props":645,"children":646},{},[647],{"type":26,"value":648},"MySQLを高速化するには、レスポンスタイムを短縮化するか、負荷を増加させる方法を取るか考える必要がある",{"title":8,"searchDepth":84,"depth":84,"links":650},[651],{"id":562,"depth":84,"text":565},"content:articles:Efficient-MySQL-Performance-1.md","articles/Efficient-MySQL-Performance-1.md",{"_path":655,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":656,"description":657,"author":658,"date":659,"layout":16,"body":660,"_type":86,"_id":744,"_source":88,"_file":745,"_extension":90},"/articles/stop-using-cpu-limits-with-kubernetes","頼むからKubernetesでCPU制限を使うのはやめてくれという記事を読んだ","「頼むからKubernetesでCPU制限を使うのはやめてくれ」という記事を読んでなるほどな〜〜〜と思った一方で思うところがあったので感想をかく",{"name":12,"avatarUrl":13,"link":14},"2023-11-26T00:00:00.000Z",{"type":18,"children":661,"toc":739},[662,676,682,687,692,711,716,721,726],{"type":21,"tag":22,"props":663,"children":664},{},[665,667,674],{"type":26,"value":666},"「",{"type":21,"tag":105,"props":668,"children":671},{"href":669,"rel":670},"https://home.robusta.dev/blog/stop-using-cpu-limits",[109],[672],{"type":26,"value":673},"頼むからKubernetesでCPU制限を使うのはやめてくれ",{"type":26,"value":675},"」という記事を読んでなるほどな〜〜〜と思った一方で思うところがあったので感想をかく",{"type":21,"tag":677,"props":678,"children":680},"h3",{"id":679},"要約",[681],{"type":26,"value":679},{"type":21,"tag":22,"props":683,"children":684},{},[685],{"type":26,"value":686},"KubernetesのCPU制限の問題: KubernetesにおけるCPU制限は、多くの場合、害になることが多い。実際、これらの制限はKubernetesのCPUスロットリング（処理能力の制限）の主要な原因である。",{"type":21,"tag":22,"props":688,"children":689},{},[690],{"type":26,"value":691},"マーカスとテレサは砂漠を旅しています。彼らは1日3リットルを生み出す魔法の水筒を持っています。人が生きていくためには1日1リットルが必要です。",{"type":21,"tag":693,"props":694,"children":695},"ol",{},[696,701,706],{"type":21,"tag":32,"props":697,"children":698},{},[699],{"type":26,"value":700},"制限なし、リクエストなし: マーカスが貪欲に水をすべて飲み、テレサが喉の渇きで亡くなる。これは、CPU飢餓の状況を表し、特定のプロセスがすべてのリソースを使用し、他のプロセスが必要なリソースを得られずに失敗する例です。",{"type":21,"tag":32,"props":702,"children":703},{},[704],{"type":26,"value":705},"制限あり、リクエストの有無にかかわらず: テレサは病気になり、より多くの水が必要になるが、彼女の制限は1日あたり1リットルで、これが守られるため、彼女は喉の渇きで亡くなる。これは、リソースが存在していても、厳格な制限により使用できない状況を示しています。",{"type":21,"tag":32,"props":707,"children":708},{},[709],{"type":26,"value":710},"制限なし、リクエストあり: マーカスが病気になるが、テレサのために水が保存されているため、彼女は生き残る。これは、CPU制限がないがリクエストが存在する状況を表し、必要なリソースが適切に割り当てられることを示しています。",{"type":21,"tag":22,"props":712,"children":713},{},[714],{"type":26,"value":715},"全体として、これらの話はCPU制限の設定が、リソースの不公平な分配やプロセスの失敗につながる可能性があることを示唆しています。特に、リソースが存在しても、厳格な制限によってその使用が制限される場合、有害な結果を招く可能性があります。",{"type":21,"tag":22,"props":717,"children":718},{},[719],{"type":26,"value":720},"メモリ制限とリクエストに関する注意: この記事はCPUに焦点を当てているが、メモリは圧縮不可能なリソースであるため、メモリに関しては常に制限とリクエストを使用し、両者を等しく設定することを推奨している。",{"type":21,"tag":560,"props":722,"children":724},{"id":723},"感想",[725],{"type":26,"value":723},{"type":21,"tag":28,"props":727,"children":728},{},[729,734],{"type":21,"tag":32,"props":730,"children":731},{},[732],{"type":26,"value":733},"リミットにかかりCPUがスロットルされるとプロセスがCPUを再び使用できるようになるまで待足されるので、例えばP99タイルに大きく影響がでうるのでなるほどなと思った",{"type":21,"tag":32,"props":735,"children":736},{},[737],{"type":26,"value":738},"メモリ制限に関してはlimitとrequestを同値に設定する点において完全同意",{"title":8,"searchDepth":84,"depth":84,"links":740},[741,743],{"id":679,"depth":742,"text":679},3,{"id":723,"depth":84,"text":723},"content:articles:stop-using-cpu-limits-with-kubernetes.md","articles/stop-using-cpu-limits-with-kubernetes.md",{"_path":747,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":748,"description":749,"cover":750,"author":751,"date":752,"layout":16,"body":753,"_type":86,"_id":761,"_source":88,"_file":762,"_extension":90},"/articles/create-blog","Hello World","ブログを作った","/ghost7.webp",{"name":12,"avatarUrl":13,"link":14},"2023-10-04T00:00:00.000Z",{"type":18,"children":754,"toc":759},[755],{"type":21,"tag":22,"props":756,"children":757},{},[758],{"type":26,"value":749},{"title":8,"searchDepth":84,"depth":84,"links":760},[],"content:articles:create-blog.md","articles/create-blog.md",1709557349241]