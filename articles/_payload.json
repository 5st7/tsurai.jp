[{"data":1,"prerenderedAt":863},["Reactive",2],{"articles":3},[4,122,195,307,510,633,755,846],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"body":11,"_type":117,"_id":118,"_source":119,"_file":120,"_extension":121},"/articles/l7-loadbalancing-with-kubernetes","articles",false,"","KubernetesとgRPCと負荷分と","Kubernetesは、Serviceリソースを通じてコネクションレベルの負荷分散を提供します。",{"type":12,"children":13,"toc":114},"root",[14,22,27,32,41,46,53,58],{"type":15,"tag":16,"props":17,"children":19},"element","h1",{"id":18},"kubernetesとgrpcと負荷分と",[20],{"type":21,"value":9},"text",{"type":15,"tag":23,"props":24,"children":25},"p",{},[26],{"type":21,"value":10},{"type":15,"tag":23,"props":28,"children":29},{},[30],{"type":21,"value":31},"一方で、gRPCはHTTP/2上に構築されており、HTTP/2は長寿命なコネクションを利用し続けます。",{"type":15,"tag":23,"props":33,"children":34},{},[35],{"type":15,"tag":36,"props":37,"children":40},"img",{"alt":38,"src":39},"undefined","https://kubernetes.io/images/blog/grpc-load-balancing-with-linkerd/Mono-8d2e53ef-b133-4aa0-9551-7e36a880c553.png",[],{"type":15,"tag":23,"props":42,"children":43},{},[44],{"type":21,"value":45},"コネクションレベルの負荷分散では、コネクションの確立時にのみ分散が考慮され、確立されたコネクション内ではリクエストは同じバックエンドにのみ送られ続けます。つまり、3つのバックエンドがあり、それぞれに1つずつコネクションが張られている場合、「コネクションレベル」では完璧に分散されているように見えますが、実際にはリクエストレベルでは分散が行われていないことになります。",{"type":15,"tag":23,"props":47,"children":48},{},[49],{"type":15,"tag":36,"props":50,"children":52},{"alt":38,"src":51},"https://kubernetes.io/images/blog/grpc-load-balancing-with-linkerd/Stereo-09aff9d7-1c98-4a0a-9184-9998ed83a531.png",[],{"type":15,"tag":23,"props":54,"children":55},{},[56],{"type":21,"value":57},"これを解決する方法としていくつか方法があります",{"type":15,"tag":59,"props":60,"children":61},"ol",{},[62,77,82,95],{"type":15,"tag":63,"props":64,"children":65},"li",{},[66,68],{"type":21,"value":67},"クライアントに負荷分散を実装する* gRPCサーバーのIPアドレスを取得し、負荷を考慮して宛先を決定する処理をgRPCクライアント側に実装します。\n",{"type":15,"tag":69,"props":70,"children":71},"ul",{},[72],{"type":15,"tag":63,"props":73,"children":74},{},[75],{"type":21,"value":76},"KubernetesではPodは頻繁に再作成されIPアドレスも頻繁に入れ替わるため、APIサーバーに問い合わせることで最新のPodのIPアドレス一覧を更新し続ける必要があります。",{"type":15,"tag":63,"props":78,"children":79},{},[80],{"type":21,"value":81},"L7プロキシをクライアントのPodへサイドカーとして挿入する* Envoyやnginxをサイドカーとして挿入し、プロキシ側に負荷分散してもらう",{"type":15,"tag":63,"props":83,"children":84},{},[85,87],{"type":21,"value":86},"サービスメッシュ* istio, linkerd, cilium\n",{"type":15,"tag":69,"props":88,"children":89},{},[90],{"type":15,"tag":63,"props":91,"children":92},{},[93],{"type":21,"value":94},"istio, linkerdはサイドカーとしてL7プロキシを挿入してその子らに負荷分散をしてもらう。",{"type":15,"tag":63,"props":96,"children":97},{},[98,100],{"type":21,"value":99},"knative* なんかHTTP/2のロードバランシングしてくれる機能があるらしい・・・\n",{"type":15,"tag":69,"props":101,"children":102},{},[103],{"type":15,"tag":63,"props":104,"children":105},{},[106],{"type":15,"tag":107,"props":108,"children":112},"a",{"href":109,"rel":110},"https://knative.dev/docs/serving/load-balancing/",[111],"nofollow",[113],{"type":21,"value":109},{"title":8,"searchDepth":115,"depth":115,"links":116},2,[],"markdown","content:articles:l7-loadbalancing-with-kubernetes.md","content","articles/l7-loadbalancing-with-kubernetes.md","md",{"_path":123,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":124,"description":125,"author":126,"date":130,"layout":131,"body":132,"_type":117,"_id":193,"_source":119,"_file":194,"_extension":121},"/articles/create-digital","DigitalOceanでk8sを立てた","GKEのプリエンティブインスタンス並に安いと聞いたので、DigitalOceanでk8sを立てて遊び場を作ってみる",{"name":127,"avatarUrl":128,"link":129},"5st7","https://pbs.twimg.com/profile_images/1042510623962275840/1Iw_Mvud_400x400.jpg","https://twitter.com/5st7","2024-2-5","article",{"type":12,"children":133,"toc":191},[134,138],{"type":15,"tag":23,"props":135,"children":136},{},[137],{"type":21,"value":125},{"type":15,"tag":69,"props":139,"children":140},{},[141,151,179],{"type":15,"tag":63,"props":142,"children":143},{},[144,146],{"type":21,"value":145},"Projectを作成する\n",{"type":15,"tag":36,"props":147,"children":150},{"alt":148,"src":149},"dc-create-project.png","/dc-create-project.png",[],{"type":15,"tag":63,"props":152,"children":153},{},[154,156],{"type":21,"value":155},"プロジェクトを作ったらサイドバーからKubernetesを選んでクラスタを作っていく",{"type":15,"tag":69,"props":157,"children":158},{},[159,164],{"type":15,"tag":63,"props":160,"children":161},{},[162],{"type":21,"value":163},"tokyoリージョンとかはなさそうなのでシンガポールを選んだ",{"type":15,"tag":63,"props":165,"children":166},{},[167,169,174],{"type":21,"value":168},"2024年2月5日だとv1.29がrecommendedになってた\n",{"type":15,"tag":36,"props":170,"children":173},{"alt":171,"src":172},"select-region.png","/select-region.png",[],{"type":15,"tag":36,"props":175,"children":178},{"alt":176,"src":177},"select-version.png","/select-version.png",[],{"type":15,"tag":63,"props":180,"children":181},{},[182,184,189],{"type":21,"value":183},"最後にポチポチノードプールを設定して終わり\n",{"type":15,"tag":36,"props":185,"children":188},{"alt":186,"src":187},"node-pool.png","/node-pool.png",[],{"type":21,"value":190},"\n2 vCPU/4GB RAMで 24ドル/月...\nGKEでn2-standard-2をSpotで借りる方が安い・・・？",{"title":8,"searchDepth":115,"depth":115,"links":192},[],"content:articles:create-digital.md","articles/create-digital.md",{"_path":196,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":197,"description":198,"author":199,"date":200,"layout":131,"body":201,"_type":117,"_id":305,"_source":119,"_file":306,"_extension":121},"/articles/java-performance-on-kubernetes","Java Performance on kubernetesの要約","Kubernetes上でのJavaアプリケーションの実行に関するリソース制限（CPUとメモリ）がアプリケーションのパフォーマンスに与える影響について解説している動画 を見たので要約",{"name":127,"avatarUrl":128,"link":129},"2024-2-15",{"type":12,"children":202,"toc":303},[203,217],{"type":15,"tag":23,"props":204,"children":205},{},[206,208,215],{"type":21,"value":207},"Kubernetes上でのJavaアプリケーションの実行に関するリソース制限（CPUとメモリ）がアプリケーションのパフォーマンスに与える影響について解説している",{"type":15,"tag":107,"props":209,"children":212},{"href":210,"rel":211},"https://www.youtube.com/watch?v=HTtdoRc0BQI",[111],[213],{"type":21,"value":214},"動画",{"type":21,"value":216}," を見たので要約",{"type":15,"tag":69,"props":218,"children":219},{},[220,238,256,274,290],{"type":15,"tag":63,"props":221,"children":222},{},[223,225],{"type":21,"value":224},"リソース制限の影響\n",{"type":15,"tag":69,"props":226,"children":227},{},[228,233],{"type":15,"tag":63,"props":229,"children":230},{},[231],{"type":21,"value":232},"NewRelicの調査によると多くのJavaアプリケーションが1つまたは2つのCPUコアと512MB以下のメモリ制限で実行されているらしい",{"type":15,"tag":63,"props":234,"children":235},{},[236],{"type":21,"value":237},"2つのCPU、1GBの割り当てでもGCのアルゴリズムはSerial GCになる",{"type":15,"tag":63,"props":239,"children":240},{},[241,243],{"type":21,"value":242},"ガベージコレクタの選択と設定\n",{"type":15,"tag":69,"props":244,"children":245},{},[246,251],{"type":15,"tag":63,"props":247,"children":248},{},[249],{"type":21,"value":250},"Serial GCだとG1よりStop The Worldが長い",{"type":15,"tag":63,"props":252,"children":253},{},[254],{"type":21,"value":255},"一般的にG1より効率が悪い",{"type":15,"tag":63,"props":257,"children":258},{},[259,261],{"type":21,"value":260},"JVMの設定\n",{"type":15,"tag":69,"props":262,"children":263},{},[264,269],{"type":15,"tag":63,"props":265,"children":266},{},[267],{"type":21,"value":268},"ヒープサイズに関しては自分で設定したほうがいい",{"type":15,"tag":63,"props":270,"children":271},{},[272],{"type":21,"value":273},"1GB割り当てた時に256MBしか割り当てられなかったりするため",{"type":15,"tag":63,"props":275,"children":276},{},[277,279],{"type":21,"value":278},"スタートアップ時間の最適化\n",{"type":15,"tag":69,"props":280,"children":281},{},[282,287],{"type":15,"tag":63,"props":283,"children":284},{},[285],{"type":21,"value":286},"多くのフレームワークがCPUの数でスレッドプールの数を設定してる",{"type":15,"tag":63,"props":288,"children":289},{},[],{"type":15,"tag":63,"props":291,"children":292},{},[293,295],{"type":21,"value":294},"クラスタとアプリケーションのスケーリング戦略\n",{"type":15,"tag":69,"props":296,"children":297},{},[298],{"type":15,"tag":63,"props":299,"children":300},{},[301],{"type":21,"value":302},"Javaアプリケーションがスケールアップ（リソースを増やす）方がスケールアウト（インスタンス数を増やす）よりも効率的である場合が多いこと, そして適切なクラスタサイズとアプリケーションの設定が重要であるらしい",{"title":8,"searchDepth":115,"depth":115,"links":304},[],"content:articles:java-performance-on-kubernetes.md","articles/java-performance-on-kubernetes.md",{"_path":308,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":309,"description":310,"author":311,"date":312,"layout":131,"body":313,"_type":117,"_id":508,"_source":119,"_file":509,"_extension":121},"/articles/how-adobe-is-optimizing-resource-usage-in-kubernetes","How Adobe is Optimizing Resource Usage in Kubernetesを見たので要約","今更だけど、KubeCon + CloudNativeCon North America 2022で発表されたHow Adobe is Optimizing Resource Usage in Kubernetesを見てコスト最適化頑張りたいとなったので要約しておく\n動画は以下",{"name":127,"avatarUrl":128,"link":129},"2024-1-20",{"type":12,"children":314,"toc":506},[315,319],{"type":15,"tag":23,"props":316,"children":317},{},[318],{"type":21,"value":310},{"type":15,"tag":69,"props":320,"children":321},{},[322,331,349,354,372,395,413,431,470,488],{"type":15,"tag":63,"props":323,"children":324},{},[325],{"type":15,"tag":107,"props":326,"children":329},{"href":327,"rel":328},"https://www.youtube.com/watch?v=iVD5YI1-U_M",[111],[330],{"type":21,"value":327},{"type":15,"tag":63,"props":332,"children":333},{},[334,336],{"type":21,"value":335},"AdobeではAdobe Experience Manager(AEM)をk8sの上で運用している",{"type":15,"tag":69,"props":337,"children":338},{},[339,344],{"type":15,"tag":63,"props":340,"children":341},{},[342],{"type":21,"value":343},"Java",{"type":15,"tag":63,"props":345,"children":346},{},[347],{"type":21,"value":348},"Apache Software FoundationのOSSを使ってる",{"type":15,"tag":63,"props":350,"children":351},{},[352],{"type":21,"value":353},"Azure上で運用されていて25以上のクラスタで動いている",{"type":15,"tag":63,"props":355,"children":356},{},[357,359],{"type":21,"value":358},"k8sのワークロードにはRequestとlimitをつける必要がある",{"type":15,"tag":69,"props":360,"children":361},{},[362,367],{"type":15,"tag":63,"props":363,"children":364},{},[365],{"type":21,"value":366},"Request:どれだけのリソースが保証されているか",{"type":15,"tag":63,"props":368,"children":369},{},[370],{"type":21,"value":371},"limit:どれだけのリソースが消費されているか",{"type":15,"tag":63,"props":373,"children":374},{},[375,377],{"type":21,"value":376},"制限をかけると以下のことが起こりうる",{"type":15,"tag":69,"props":378,"children":379},{},[380,385,390],{"type":15,"tag":63,"props":381,"children":382},{},[383],{"type":21,"value":384},"CPU: CPUスロットリング",{"type":15,"tag":63,"props":386,"children":387},{},[388],{"type":21,"value":389},"Memory: OOM",{"type":15,"tag":63,"props":391,"children":392},{},[393],{"type":21,"value":394},"ephemeral storage: Podのeviction",{"type":15,"tag":63,"props":396,"children":397},{},[398,400],{"type":21,"value":399},"AEMはJavaのアプリケーション",{"type":15,"tag":69,"props":401,"children":402},{},[403,408],{"type":15,"tag":63,"props":404,"children":405},{},[406],{"type":21,"value":407},"JVMは起動時に全てのメモリを確保し、メモリの使用率はk8sからは隠されています",{"type":15,"tag":63,"props":409,"children":410},{},[411],{"type":21,"value":412},"JDK 17以上ではホストではなくコンテナの利用可能なメモリを検出する",{"type":15,"tag":63,"props":414,"children":415},{},[416,418],{"type":21,"value":417},"Kubernetes Cluster AutoScaler",{"type":15,"tag":69,"props":419,"children":420},{},[421,426],{"type":15,"tag":63,"props":422,"children":423},{},[424],{"type":21,"value":425},"CPU/メモリリクエストに基づいてノードの数を増減させる",{"type":15,"tag":63,"props":427,"children":428},{},[429],{"type":21,"value":430},"これでコストを30 - 50 %抑えた",{"type":15,"tag":63,"props":432,"children":433},{},[434,436],{"type":21,"value":435},"Horizontal Pod Autoscaler",{"type":15,"tag":69,"props":437,"children":438},{},[439,444,465],{"type":15,"tag":63,"props":440,"children":441},{},[442],{"type":21,"value":443},"必要に応じてPodの数を増減させる",{"type":15,"tag":63,"props":445,"children":446},{},[447,449],{"type":21,"value":448},"AEMだとCPUの使用率かHTTPの分単位のリクエスト数(rps)がいいのかが考えられる\n",{"type":15,"tag":69,"props":450,"children":451},{},[452],{"type":15,"tag":63,"props":453,"children":454},{},[455,457],{"type":21,"value":456},"CPUの使用率は不適切だった\n",{"type":15,"tag":69,"props":458,"children":459},{},[460],{"type":15,"tag":63,"props":461,"children":462},{},[463],{"type":21,"value":464},"コンテナ起動時のスパイクがカスケード効果を引き起こす可能性があった",{"type":15,"tag":63,"props":466,"children":467},{},[468],{"type":21,"value":469},"HPAを有効にして50 - 70%コストを抑えられた",{"type":15,"tag":63,"props":471,"children":472},{},[473,475],{"type":21,"value":474},"Vertical Pod Autoscaler",{"type":15,"tag":69,"props":476,"children":477},{},[478,483],{"type":15,"tag":63,"props":479,"children":480},{},[481],{"type":21,"value":482},"開発環境などにおいて使っていないときはスケールダウンする",{"type":15,"tag":63,"props":484,"children":485},{},[486],{"type":21,"value":487},"5 - 15 %コストダウン",{"type":15,"tag":63,"props":489,"children":490},{},[491,493],{"type":21,"value":492},"以下の2つはAdobe内部の話なので割愛",{"type":15,"tag":69,"props":494,"children":495},{},[496,501],{"type":15,"tag":63,"props":497,"children":498},{},[499],{"type":21,"value":500},"Hibernation",{"type":15,"tag":63,"props":502,"children":503},{},[504],{"type":21,"value":505},"ARC",{"title":8,"searchDepth":115,"depth":115,"links":507},[],"content:articles:How-Adobe-is-Optimizing-Resource-Usage-in-Kubernetes.md","articles/How-Adobe-is-Optimizing-Resource-Usage-in-Kubernetes.md",{"_path":511,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":512,"description":513,"author":514,"date":515,"layout":131,"body":516,"_type":117,"_id":631,"_source":119,"_file":632,"_extension":121},"/articles/efficient-mysql-performance-2","Efficient MySQL Performance 読書メモ ~その2~","メモ１からの続き",{"name":127,"avatarUrl":128,"link":129},"2024-03-1",{"type":12,"children":517,"toc":629},[518,522,528],{"type":15,"tag":23,"props":519,"children":520},{},[521],{"type":21,"value":513},{"type":15,"tag":16,"props":523,"children":525},{"id":524},"indexes-and-indexing",[526],{"type":21,"value":527},"Indexes and Indexing",{"type":15,"tag":69,"props":529,"children":530},{},[531,536,575],{"type":15,"tag":63,"props":532,"children":533},{},[534],{"type":21,"value":535},"Indexを有効に使うことでMySQLのパフォーマンスを最も発揮することができる",{"type":15,"tag":63,"props":537,"children":538},{},[539,541],{"type":21,"value":540},"InnoDbは主キーで整理されたB-Treeインデックス\n",{"type":15,"tag":69,"props":542,"children":543},{},[544,557],{"type":15,"tag":63,"props":545,"children":546},{},[547,549],{"type":21,"value":548},"Clustered Index\n",{"type":15,"tag":69,"props":550,"children":551},{},[552],{"type":15,"tag":63,"props":553,"children":554},{},[555],{"type":21,"value":556},"PK をキーにした B-tree インデックスとして保存されている",{"type":15,"tag":63,"props":558,"children":559},{},[560,562],{"type":21,"value":561},"Secondary Index\n",{"type":15,"tag":69,"props":563,"children":564},{},[565,570],{"type":15,"tag":63,"props":566,"children":567},{},[568],{"type":21,"value":569},"PK 以外のキーを使ったすべてのインデックス",{"type":15,"tag":63,"props":571,"children":572},{},[573],{"type":21,"value":574},"Leaf に PK を保持している。つまり Secondary Index を使った検索はまず Secondary Index を走査し取得した PK の値で Clustered Index を走査する",{"type":15,"tag":63,"props":576,"children":577},{},[578,580],{"type":21,"value":579},"ある時点では最適なインデックスも、時間経過でそうではなくなることがある\n",{"type":15,"tag":69,"props":581,"children":582},{},[583,588,606,611],{"type":15,"tag":63,"props":584,"children":585},{},[586],{"type":21,"value":587},"クエリが変わる",{"type":15,"tag":63,"props":589,"children":590},{},[591,593],{"type":21,"value":592},"キーが過剰、重複、未使用\n",{"type":15,"tag":69,"props":594,"children":595},{},[596],{"type":15,"tag":63,"props":597,"children":598},{},[599],{"type":15,"tag":107,"props":600,"children":603},{"href":601,"rel":602},"https://docs.percona.com/percona-toolkit/pt-duplicate-key-checker.html",[111],[604],{"type":21,"value":605},"pt-duplicate-key-checker",{"type":15,"tag":63,"props":607,"children":608},{},[609],{"type":21,"value":610},"インデックスを Drop する時、8.0 以降は Invisible Indexes で実際に削除せずに検証できる",{"type":15,"tag":63,"props":612,"children":613},{},[614,616],{"type":21,"value":615},"Selectivity が極端\n",{"type":15,"tag":69,"props":617,"children":618},{},[619,624],{"type":15,"tag":63,"props":620,"children":621},{},[622],{"type":21,"value":623},"小さい場合: より適切なキーがある",{"type":15,"tag":63,"props":625,"children":626},{},[627],{"type":21,"value":628},"大きい場合: 本来ユニークインデックスであるべきかも",{"title":8,"searchDepth":115,"depth":115,"links":630},[],"content:articles:Efficient-MySQL-Performance-2.md","articles/Efficient-MySQL-Performance-2.md",{"_path":634,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":635,"description":636,"author":637,"date":638,"layout":131,"body":639,"_type":117,"_id":753,"_source":119,"_file":754,"_extension":121},"/articles/efficient-mysql-performance-1","Efficient MySQL Performance 読書メモ ~その1~","最近Efficient MySQL Performanceを読んでいる",{"name":127,"avatarUrl":128,"link":129},"2023-12-8",{"type":12,"children":640,"toc":750},[641,655,660,667],{"type":15,"tag":23,"props":642,"children":643},{},[644,646,653],{"type":21,"value":645},"最近",{"type":15,"tag":107,"props":647,"children":650},{"href":648,"rel":649},"https://www.amazon.co.jp/Efficient-Mysql-Performance-Practices-Techniques/dp/1098105095",[111],[651],{"type":21,"value":652},"Efficient MySQL Performance",{"type":21,"value":654},"を読んでいる",{"type":15,"tag":23,"props":656,"children":657},{},[658],{"type":21,"value":659},"洋書なので読むのが大変だけど結構面白い\nひとまず第一章のQuery Response Timeの章まで読んだのでそこまで読書メモ",{"type":15,"tag":661,"props":662,"children":664},"h2",{"id":663},"_1-query-response-time",[665],{"type":21,"value":666},"1. Query Response Time",{"type":15,"tag":69,"props":668,"children":669},{},[670,683,696,709,714,732],{"type":15,"tag":63,"props":671,"children":672},{},[673,675],{"type":21,"value":674},"クエリ応答時間がMySQLのパフォーマンスを測る上での北極星になる\n",{"type":15,"tag":69,"props":676,"children":677},{},[678],{"type":15,"tag":63,"props":679,"children":680},{},[681],{"type":21,"value":682},"クエリ応答時間はクエリ実行中のステップやロック待ちなどから構成され、複雑さの範囲を絞り本質的なものに焦点を当てることができる",{"type":15,"tag":63,"props":684,"children":685},{},[686,688],{"type":21,"value":687},"クエリのメトリクスはSlow Query log, Perfomance Schemaから確認する\n",{"type":15,"tag":69,"props":689,"children":690},{},[691],{"type":15,"tag":63,"props":692,"children":693},{},[694],{"type":21,"value":695},"MySQL 8.0より前のバージョンだとSlowQueryLogが提供するメトリクスはQueryTime,lock_time,Rows_sent,Rows_examinedしか提供せず、分析が難しいのでPerfomanceSchemaを元に分析をするといい",{"type":15,"tag":63,"props":697,"children":698},{},[699,701],{"type":21,"value":700},"クエリ解析の目的は、遅い実行時間を解くのではなく、クエリの実行を理解することである\n",{"type":15,"tag":69,"props":702,"children":703},{},[704],{"type":15,"tag":63,"props":705,"children":706},{},[707],{"type":21,"value":708},"クエリ解析には、報告されているクエリメトリクス、メタデータ（Explain, テーブル構造）やアプリケーションの知識を使って解析をする",{"type":15,"tag":63,"props":710,"children":711},{},[712],{"type":21,"value":713},"クエリの解析には、クエリ応答じかn、ロック時間、走査した行、送信した行、影響を受けた行、スキャンの種類、フルジョインの選択、作成したtmpテーブル、クエリカウントの9つのクエリメトリクスが必須となる",{"type":15,"tag":63,"props":715,"children":716},{},[717,719],{"type":21,"value":718},"クエリ応答時間お改善は、直接クエリ最適化と間接クエリ最適化に分けられる\n",{"type":15,"tag":69,"props":720,"children":721},{},[722,727],{"type":15,"tag":63,"props":723,"children":724},{},[725],{"type":21,"value":726},"直接クエリ最適化とは、クエリやインデックスを変更すること",{"type":15,"tag":63,"props":728,"children":729},{},[730],{"type":21,"value":731},"間接クエリ最適化とは、データやアクセスパターンの変更",{"type":15,"tag":63,"props":733,"children":734},{},[735,737],{"type":21,"value":736},"少なくともパフォーマンスが顧客に影響する時、コードを変更する前と後に月に1度クエリプロファイルを確認し、遅いクエリを最適化する\n",{"type":15,"tag":69,"props":738,"children":739},{},[740,745],{"type":15,"tag":63,"props":741,"children":742},{},[743],{"type":21,"value":744},"コード変更の前後でクエリ最適化を優先するエンジニアが多いが、著者の経験ではどちらもしなく、ステージング環境、本番環境で最適化し続けていく",{"type":15,"tag":63,"props":746,"children":747},{},[748],{"type":21,"value":749},"MySQLを高速化するには、レスポンスタイムを短縮化するか、負荷を増加させる方法を取るか考える必要がある",{"title":8,"searchDepth":115,"depth":115,"links":751},[752],{"id":663,"depth":115,"text":666},"content:articles:Efficient-MySQL-Performance-1.md","articles/Efficient-MySQL-Performance-1.md",{"_path":756,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":757,"description":758,"author":759,"date":760,"layout":131,"body":761,"_type":117,"_id":844,"_source":119,"_file":845,"_extension":121},"/articles/stop-using-cpu-limits-with-kubernetes","頼むからKubernetesでCPU制限を使うのはやめてくれという記事を読んだ","「頼むからKubernetesでCPU制限を使うのはやめてくれ」という記事を読んでなるほどな〜〜〜と思った一方で思うところがあったので感想をかく",{"name":127,"avatarUrl":128,"link":129},"2023-11-26T00:00:00.000Z",{"type":12,"children":762,"toc":839},[763,777,783,788,793,811,816,821,826],{"type":15,"tag":23,"props":764,"children":765},{},[766,768,775],{"type":21,"value":767},"「",{"type":15,"tag":107,"props":769,"children":772},{"href":770,"rel":771},"https://home.robusta.dev/blog/stop-using-cpu-limits",[111],[773],{"type":21,"value":774},"頼むからKubernetesでCPU制限を使うのはやめてくれ",{"type":21,"value":776},"」という記事を読んでなるほどな〜〜〜と思った一方で思うところがあったので感想をかく",{"type":15,"tag":778,"props":779,"children":781},"h3",{"id":780},"要約",[782],{"type":21,"value":780},{"type":15,"tag":23,"props":784,"children":785},{},[786],{"type":21,"value":787},"KubernetesのCPU制限の問題: KubernetesにおけるCPU制限は、多くの場合、害になることが多い。実際、これらの制限はKubernetesのCPUスロットリング（処理能力の制限）の主要な原因である。",{"type":15,"tag":23,"props":789,"children":790},{},[791],{"type":21,"value":792},"マーカスとテレサは砂漠を旅しています。彼らは1日3リットルを生み出す魔法の水筒を持っています。人が生きていくためには1日1リットルが必要です。",{"type":15,"tag":59,"props":794,"children":795},{},[796,801,806],{"type":15,"tag":63,"props":797,"children":798},{},[799],{"type":21,"value":800},"制限なし、リクエストなし: マーカスが貪欲に水をすべて飲み、テレサが喉の渇きで亡くなる。これは、CPU飢餓の状況を表し、特定のプロセスがすべてのリソースを使用し、他のプロセスが必要なリソースを得られずに失敗する例です。",{"type":15,"tag":63,"props":802,"children":803},{},[804],{"type":21,"value":805},"制限あり、リクエストの有無にかかわらず: テレサは病気になり、より多くの水が必要になるが、彼女の制限は1日あたり1リットルで、これが守られるため、彼女は喉の渇きで亡くなる。これは、リソースが存在していても、厳格な制限により使用できない状況を示しています。",{"type":15,"tag":63,"props":807,"children":808},{},[809],{"type":21,"value":810},"制限なし、リクエストあり: マーカスが病気になるが、テレサのために水が保存されているため、彼女は生き残る。これは、CPU制限がないがリクエストが存在する状況を表し、必要なリソースが適切に割り当てられることを示しています。",{"type":15,"tag":23,"props":812,"children":813},{},[814],{"type":21,"value":815},"全体として、これらの話はCPU制限の設定が、リソースの不公平な分配やプロセスの失敗につながる可能性があることを示唆しています。特に、リソースが存在しても、厳格な制限によってその使用が制限される場合、有害な結果を招く可能性があります。",{"type":15,"tag":23,"props":817,"children":818},{},[819],{"type":21,"value":820},"メモリ制限とリクエストに関する注意: この記事はCPUに焦点を当てているが、メモリは圧縮不可能なリソースであるため、メモリに関しては常に制限とリクエストを使用し、両者を等しく設定することを推奨している。",{"type":15,"tag":661,"props":822,"children":824},{"id":823},"感想",[825],{"type":21,"value":823},{"type":15,"tag":69,"props":827,"children":828},{},[829,834],{"type":15,"tag":63,"props":830,"children":831},{},[832],{"type":21,"value":833},"リミットにかかりCPUがスロットルされるとプロセスがCPUを再び使用できるようになるまで待足されるので、例えばP99タイルに大きく影響がでうるのでなるほどなと思った",{"type":15,"tag":63,"props":835,"children":836},{},[837],{"type":21,"value":838},"メモリ制限に関してはlimitとrequestを同値に設定する点において完全同意",{"title":8,"searchDepth":115,"depth":115,"links":840},[841,843],{"id":780,"depth":842,"text":780},3,{"id":823,"depth":115,"text":823},"content:articles:stop-using-cpu-limits-with-kubernetes.md","articles/stop-using-cpu-limits-with-kubernetes.md",{"_path":847,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":848,"description":849,"cover":850,"author":851,"date":852,"layout":131,"body":853,"_type":117,"_id":861,"_source":119,"_file":862,"_extension":121},"/articles/create-blog","Hello World","ブログを作った","/ghost7.webp",{"name":127,"avatarUrl":128,"link":129},"2023-10-04T00:00:00.000Z",{"type":12,"children":854,"toc":859},[855],{"type":15,"tag":23,"props":856,"children":857},{},[858],{"type":21,"value":849},{"title":8,"searchDepth":115,"depth":115,"links":860},[],"content:articles:create-blog.md","articles/create-blog.md",1710767035546]