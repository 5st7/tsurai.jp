{"_path":"/articles/l7-loadbalancing-with-kubernetes","_dir":"articles","_draft":false,"_partial":false,"_locale":"","title":"KubernetesとgRPCと負荷分と","description":"Kubernetesは、Serviceリソースを通じてコネクションレベルの負荷分散を提供します。","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"kubernetesとgrpcと負荷分と"},"children":[{"type":"text","value":"KubernetesとgRPCと負荷分と"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Kubernetesは、Serviceリソースを通じてコネクションレベルの負荷分散を提供します。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"一方で、gRPCはHTTP/2上に構築されており、HTTP/2は長寿命なコネクションを利用し続けます。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"undefined","src":"https://kubernetes.io/images/blog/grpc-load-balancing-with-linkerd/Mono-8d2e53ef-b133-4aa0-9551-7e36a880c553.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"コネクションレベルの負荷分散では、コネクションの確立時にのみ分散が考慮され、確立されたコネクション内ではリクエストは同じバックエンドにのみ送られ続けます。つまり、3つのバックエンドがあり、それぞれに1つずつコネクションが張られている場合、「コネクションレベル」では完璧に分散されているように見えますが、実際にはリクエストレベルでは分散が行われていないことになります。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"undefined","src":"https://kubernetes.io/images/blog/grpc-load-balancing-with-linkerd/Stereo-09aff9d7-1c98-4a0a-9184-9998ed83a531.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"これを解決する方法としていくつか方法があります"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"クライアントに負荷分散を実装する* gRPCサーバーのIPアドレスを取得し、負荷を考慮して宛先を決定する処理をgRPCクライアント側に実装します。\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"KubernetesではPodは頻繁に再作成されIPアドレスも頻繁に入れ替わるため、APIサーバーに問い合わせることで最新のPodのIPアドレス一覧を更新し続ける必要があります。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"L7プロキシをクライアントのPodへサイドカーとして挿入する* Envoyやnginxをサイドカーとして挿入し、プロキシ側に負荷分散してもらう"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"サービスメッシュ* istio, linkerd, cilium\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"istio, linkerdはサイドカーとしてL7プロキシを挿入してその子らに負荷分散をしてもらう。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"knative* なんかHTTP/2のロードバランシングしてくれる機能があるらしい・・・\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://knative.dev/docs/serving/load-balancing/","rel":["nofollow"]},"children":[{"type":"text","value":"https://knative.dev/docs/serving/load-balancing/"}]}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:articles:l7-loadbalancing-with-kubernetes.md","_source":"content","_file":"articles/l7-loadbalancing-with-kubernetes.md","_extension":"md"}